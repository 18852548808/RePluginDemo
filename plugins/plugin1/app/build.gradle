apply plugin: 'com.android.application'

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "com.test.android.plugin1"
        minSdkVersion 21
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        debug {
            keyAlias 'plugin-key'
            keyPassword 'android'
            storeFile file('../../../keystore/plugin.keystore.jks')
            storePassword 'android'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
    }
}

apply plugin: 'replugin-plugin-gradle'

repluginPluginConfig {
    pluginName = "plugin1"
    hostApplicationId = "com.android.test.host.demo"
    hostAppLauncherActivity = "com.android.test.host.demo.MainActivity"
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:27.1.1'

    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    implementation 'com.qihoo360.replugin:replugin-plugin-lib:2.3.0'

    /**
     * 这个jar就是从Support-fragment中提取出来的并非特制包目的是为了骗过编译期
     */
    //provided files('libs/fragment.jar')

    /**
     * 插件引用宿主类的方式
     */
    if (isPlugin.toBoolean()) {
        compileOnly files('libs/plugin-utils-lib-1.0.0.jar')
    } else {
        implementation files('libs/plugin-utils-lib-1.0.0.jar')
    }
}



//task to copy apk to plugins-output/
task copyApk(type: Copy) {

    from('build/outputs/apk/debug/app-debug.apk')
    into('../../plugins-output')
    ///Rename the aar
    rename('app-debug.apk', 'plugin1.apk')
}

copyApk.dependsOn(build)

